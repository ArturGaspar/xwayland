From 2341220e3c3f04d4ab27008e6a841f107963e32c Mon Sep 17 00:00:00 2001
From: Artur Gaspar <artur.gaspar.00@gmail.com>
Date: Thu, 20 Jun 2024 03:27:54 -0300
Subject: [PATCH 3/3] Revert "xwayland: port rooted xwayland from wl_shell to
 xdg-shell protocol"

This reverts commit 3d6efc4aaff80301c0b10b7b6ba297eb5e54c1a0.
---
 hw/xwayland/meson.build       |  3 ---
 hw/xwayland/xwayland-screen.c | 21 +++-------------
 hw/xwayland/xwayland-screen.h |  2 +-
 hw/xwayland/xwayland-window.c | 46 +++++++++++++++++++++--------------
 hw/xwayland/xwayland-window.h |  2 +-
 5 files changed, 33 insertions(+), 41 deletions(-)

diff --git a/hw/xwayland/meson.build b/hw/xwayland/meson.build
index 37c39497c..7296d5ed5 100644
--- a/hw/xwayland/meson.build
+++ b/hw/xwayland/meson.build
@@ -44,7 +44,6 @@ kbgrab_xml = join_paths(protodir, 'unstable', 'xwayland-keyboard-grab', 'xwaylan
 xdg_output_xml = join_paths(protodir, 'unstable', 'xdg-output', 'xdg-output-unstable-v1.xml')
 dmabuf_xml = join_paths(protodir, 'unstable', 'linux-dmabuf', 'linux-dmabuf-unstable-v1.xml')
 viewporter_xml = join_paths(protodir, 'stable', 'viewporter', 'viewporter.xml')
-xdg_shell_xml = join_paths(protodir, 'stable', 'xdg-shell', 'xdg-shell.xml')
 drm_lease_xml = join_paths(protodir, 'staging', 'drm-lease', 'drm-lease-v1.xml')
 
 client_header = generator(scanner,
@@ -70,7 +69,6 @@ srcs += client_header.process(kbgrab_xml)
 srcs += client_header.process(xdg_output_xml)
 srcs += client_header.process(dmabuf_xml)
 srcs += client_header.process(viewporter_xml)
-srcs += client_header.process(xdg_shell_xml)
 srcs += client_header.process(drm_lease_xml)
 srcs += code.process(relative_xml)
 srcs += code.process(pointer_xml)
@@ -80,7 +78,6 @@ srcs += code.process(kbgrab_xml)
 srcs += code.process(xdg_output_xml)
 srcs += code.process(dmabuf_xml)
 srcs += code.process(viewporter_xml)
-srcs += code.process(xdg_shell_xml)
 srcs += code.process(drm_lease_xml)
 
 xwayland_glamor = []
diff --git a/hw/xwayland/xwayland-screen.c b/hw/xwayland/xwayland-screen.c
index 67799af2c..8a90dc3e6 100644
--- a/hw/xwayland/xwayland-screen.c
+++ b/hw/xwayland/xwayland-screen.c
@@ -58,7 +58,6 @@
 
 #include "xdg-output-unstable-v1-client-protocol.h"
 #include "viewporter-client-protocol.h"
-#include "xdg-shell-client-protocol.h"
 
 static DevPrivateKeyRec xwl_screen_private_key;
 static DevPrivateKeyRec xwl_client_private_key;
@@ -374,17 +373,6 @@ xwl_screen_post_damage(struct xwl_screen *xwl_screen)
     }
 }
 
-static void
-xdg_wm_base_ping(void *data, struct xdg_wm_base *xdg_wm_base,
-                 uint32_t serial)
-{
-    xdg_wm_base_pong(xdg_wm_base, serial);
-}
-
-static const struct xdg_wm_base_listener xdg_wm_base_listener = {
-    xdg_wm_base_ping,
-};
-
 static void
 registry_global(void *data, struct wl_registry *registry, uint32_t id,
                 const char *interface, uint32_t version)
@@ -403,12 +391,9 @@ registry_global(void *data, struct wl_registry *registry, uint32_t id,
     else if (strcmp(interface, "wl_shm") == 0) {
         xwl_screen->shm = wl_registry_bind(registry, id, &wl_shm_interface, 1);
     }
-    else if (strcmp(interface, "xdg_wm_base") == 0) {
-        xwl_screen->xdg_wm_base =
-            wl_registry_bind(registry, id, &xdg_wm_base_interface, 1);
-        xdg_wm_base_add_listener(xwl_screen->xdg_wm_base,
-                                 &xdg_wm_base_listener,
-                                 NULL);
+    else if (strcmp(interface, "wl_shell") == 0) {
+        xwl_screen->shell =
+            wl_registry_bind(registry, id, &wl_shell_interface, 1);
     }
     else if (strcmp(interface, "wl_output") == 0 && version >= 2) {
         if (xwl_output_create(xwl_screen, id))
diff --git a/hw/xwayland/xwayland-screen.h b/hw/xwayland/xwayland-screen.h
index 6d1e7d1bd..7c2d353c5 100644
--- a/hw/xwayland/xwayland-screen.h
+++ b/hw/xwayland/xwayland-screen.h
@@ -83,7 +83,7 @@ struct xwl_screen {
     struct wl_compositor *compositor;
     struct zwp_tablet_manager_v2 *tablet_manager;
     struct wl_shm *shm;
-    struct xdg_wm_base *xdg_wm_base;
+    struct wl_shell *shell;
     struct zwp_relative_pointer_manager_v1 *relative_pointer_manager;
     struct zwp_pointer_constraints_v1 *pointer_constraints;
     struct zwp_pointer_gestures_v1 *pointer_gestures;
diff --git a/hw/xwayland/xwayland-window.c b/hw/xwayland/xwayland-window.c
index ba7d7af0b..8d21c39fd 100644
--- a/hw/xwayland/xwayland-window.c
+++ b/hw/xwayland/xwayland-window.c
@@ -44,7 +44,6 @@
 #include "xwayland-shm.h"
 
 #include "viewporter-client-protocol.h"
-#include "xdg-shell-client-protocol.h"
 
 #define DELAYED_WL_SURFACE_DESTROY 1000 /* ms */
 
@@ -424,15 +423,28 @@ send_surface_id_event(struct xwl_window *xwl_window)
 }
 
 static void
-xdg_surface_handle_configure(void *data,
-                             struct xdg_surface *xdg_surface,
-                             uint32_t serial)
+shell_surface_ping(void *data,
+                   struct wl_shell_surface *shell_surface, uint32_t serial)
 {
-    xdg_surface_ack_configure(xdg_surface, serial);
+    wl_shell_surface_pong(shell_surface, serial);
 }
 
-static const struct xdg_surface_listener xdg_surface_listener = {
-    xdg_surface_handle_configure,
+static void
+shell_surface_configure(void *data,
+                        struct wl_shell_surface *wl_shell_surface,
+                        uint32_t edges, int32_t width, int32_t height)
+{
+}
+
+static void
+shell_surface_popup_done(void *data, struct wl_shell_surface *wl_shell_surface)
+{
+}
+
+static const struct wl_shell_surface_listener shell_surface_listener = {
+    shell_surface_ping,
+    shell_surface_configure,
+    shell_surface_popup_done
 };
 
 static Bool
@@ -471,19 +483,17 @@ ensure_surface_for_window(WindowPtr window)
     }
 
     if (!xwl_screen->rootless) {
-        xwl_window->xdg_surface =
-            xdg_wm_base_get_xdg_surface(xwl_screen->xdg_wm_base, xwl_window->surface);
-        if (xwl_window->xdg_surface == NULL) {
-            ErrorF("Failed creating xdg_wm_base xdg_surface\n");
+        xwl_window->shell_surface =
+            wl_shell_get_shell_surface(xwl_screen->shell, xwl_window->surface);
+        if (xwl_window->shell_surface == NULL) {
+            ErrorF("Failed creating shell surface\n");
             goto err_surf;
         }
 
-        xdg_surface_add_listener(xwl_window->xdg_surface,
-                                 &xdg_surface_listener, xwl_window);
-
-        xdg_surface_get_toplevel(xwl_window->xdg_surface);
+        wl_shell_surface_add_listener(xwl_window->shell_surface,
+                                      &shell_surface_listener, xwl_window);
 
-        wl_surface_commit(xwl_window->surface);
+        wl_shell_surface_set_toplevel(xwl_window->shell_surface);
 
         region = wl_compositor_create_region(xwl_screen->compositor);
         if (region == NULL) {
@@ -533,8 +543,8 @@ ensure_surface_for_window(WindowPtr window)
     return TRUE;
 
 err_surf:
-    if (xwl_window->xdg_surface)
-        xdg_surface_destroy(xwl_window->xdg_surface);
+    if (xwl_window->shell_surface)
+        wl_shell_surface_destroy(xwl_window->shell_surface);
     wl_surface_destroy(xwl_window->surface);
 err:
     free(xwl_window);
diff --git a/hw/xwayland/xwayland-window.h b/hw/xwayland/xwayland-window.h
index 6245e47b5..68f5db63c 100644
--- a/hw/xwayland/xwayland-window.h
+++ b/hw/xwayland/xwayland-window.h
@@ -48,7 +48,7 @@ struct xwl_window {
     struct wl_surface *surface;
     struct wp_viewport *viewport;
     float scale_x, scale_y;
-    struct xdg_surface *xdg_surface;
+    struct wl_shell_surface *shell_surface;
     WindowPtr window;
     struct xorg_list link_damage;
     struct xorg_list link_window;
-- 
2.45.2

